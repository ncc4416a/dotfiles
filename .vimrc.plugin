scriptencoding utf-8

"===========================================================
" .vimrc.plugin
"
"                        Last Modified: 2014-01-10 15:25:53
"===========================================================

"-------------------------------------------------
" NeoBundle
"-------------------------------------------------

set nocompatible
filetype off

if has('vim_starting')
    set runtimepath+=~/.vim/bundle/neobundle.vim/
    call neobundle#rc(expand('~/.vim/bundle'))
endif

"-------------------------------------------------
" autodate.vim
"-------------------------------------------------

NeoBundle 'autodate.vim'

:let autodate_keyword_pre = '\cLast Modified:[ \t]\+'
:let autodate_keyword_post = '$'
:let autodate_format = '%Y-%m-%d %H:%M:%S'
:let autodate_start_line = 1
:let autodate_lines = 15

"-------------------------------------------------
" HybridText
"-------------------------------------------------

NeoBundle 'HybridText'

"-------------------------------------------------
" lightline.vim
"-------------------------------------------------

NeoBundle 'itchyny/lightline.vim'

set t_Co=256

let g:lightline = {
            \ 'colorscheme': 'wombat',
            \ 'mode_map': {'c': 'NORMAL'},
            \ 'active': {
            \   'left': [ [ 'mode', 'paste' ], [ 'fugitive', 'filename' ] ]
            \ },
            \ 'component_function': {
            \   'modified': 'MyModified',
            \   'readonly': 'MyReadonly',
            \   'fugitive': 'MyFugitive',
            \   'filename': 'MyFilename',
            \   'fileformat': 'MyFileformat',
            \   'filetype': 'MyFiletype',
            \   'fileencoding': 'MyFileencoding',
            \   'mode': 'MyMode'
            \ }
            \ }

function! MyModified()
    return &ft =~ 'help\|vimfiler\|gundo' ? '' : &modified ? '+' : &modifiable ? '' : '-'
endfunction

function! MyReadonly()
    return &ft !~? 'help\|vimfiler\|gundo' && &readonly ? 'x' : ''
endfunction

function! MyFilename()
    return ('' != MyReadonly() ? MyReadonly() . ' ' : '') .
                \ (&ft == 'vimfiler' ? vimfiler#get_status_string() :
                \  &ft == 'unite' ? unite#get_status_string() :
                \  &ft == 'vimshell' ? vimshell#get_status_string() :
                \ '' != expand('%:t') ? expand('%:t') : '[No Name]') .
                \ ('' != MyModified() ? ' ' . MyModified() : '')
endfunction

function! MyFugitive()
    try
        if &ft !~? 'vimfiler\|gundo' && exists('*fugitive#head')
            return fugitive#head()
        endif
    catch
    endtry
    return ''
endfunction

function! MyFileformat()
    return winwidth(0) > 70 ? &fileformat : ''
endfunction

function! MyFiletype()
    return winwidth(0) > 70 ? (strlen(&filetype) ? &filetype : 'no ft') : ''
endfunction

function! MyFileencoding()
    return winwidth(0) > 70 ? (strlen(&fenc) ? &fenc : &enc) : ''
endfunction

function! MyMode()
    return winwidth(0) > 60 ? lightline#mode() : ''
endfunction

"-------------------------------------------------
" markdown
"-------------------------------------------------

NeoBundle 'plasticboy/vim-markdown'

"-------------------------------------------------
" memolist.vim
"-------------------------------------------------

NeoBundle 'glidenote/memolist.vim'
let g:memolist_memo_suffix = "txt"
let g:memolist_path = "~/Documents/memo"

"-------------------------------------------------
" open-browser.vim
"-------------------------------------------------

NeoBundle 'tyru/open-browser.vim'

"-------------------------------------------------
" previm
"-------------------------------------------------

NeoBundle 'kannokanno/previm'
"let g:previm_open_cmd = 'open -a Firefox'
"let g:previm_open_cmd = 'open -a Safari'

"-------------------------------------------------
" surround.vim
"-------------------------------------------------

NeoBundle 'tpope/vim-surround'

"-------------------------------------------------
" unite.vim
"-------------------------------------------------

NeoBundle 'Shougo/unite.vim'

"-------------------------------------------------
" vimproc
"-------------------------------------------------

NeoBundle 'Shougo/vimproc'

"NeoBundle 'Shougo/vimproc', {
"            \ 'build' : {
"            \ 'windows' : 'make -f make_mingw32.mak',
"            \ 'cygwin' : 'make -f make_cygwin.mak',
"            \ 'mac' : 'make -f make_mac.mak',
"            \ 'unix' : 'make -f make_unix.mak',
"            \ },
"            \ }

"-------------------------------------------------
" vimshell.vim
"-------------------------------------------------

NeoBundle "Shougo/vimshell.vim"


filetype plugin indent on

" .vimrc.plugin ends here
